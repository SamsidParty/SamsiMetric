<?php 

require_once("./PHP/sql.php");

$validCountries = array (
    0 => 'CountryAF',
    1 => 'CountryAL',
    2 => 'CountryDZ',
    3 => 'CountryAD',
    4 => 'CountryAO',
    5 => 'CountryAG',
    6 => 'CountryAR',
    7 => 'CountryAM',
    8 => 'CountryAU',
    9 => 'CountryAT',
    10 => 'CountryAZ',
    11 => 'CountryBS',
    12 => 'CountryBH',
    13 => 'CountryBD',
    14 => 'CountryBB',
    15 => 'CountryBY',
    16 => 'CountryBE',
    17 => 'CountryBZ',
    18 => 'CountryBJ',
    19 => 'CountryBT',
    20 => 'CountryBO',
    21 => 'CountryBA',
    22 => 'CountryBW',
    23 => 'CountryBR',
    24 => 'CountryBN',
    25 => 'CountryBG',
    26 => 'CountryBF',
    27 => 'CountryBI',
    28 => 'CountryCV',
    29 => 'CountryKH',
    30 => 'CountryCM',
    31 => 'CountryCA',
    32 => 'CountryCF',
    33 => 'CountryTD',
    34 => 'CountryCL',
    35 => 'CountryCN',
    36 => 'CountryCO',
    37 => 'CountryKM',
    38 => 'CountryCG',
    39 => 'CountryCD',
    40 => 'CountryCR',
    41 => 'CountryCI',
    42 => 'CountryHR',
    43 => 'CountryCU',
    44 => 'CountryCY',
    45 => 'CountryCZ',
    46 => 'CountryDK',
    47 => 'CountryDJ',
    48 => 'CountryDM',
    49 => 'CountryDO',
    50 => 'CountryEC',
    51 => 'CountryEG',
    52 => 'CountrySV',
    53 => 'CountryGQ',
    54 => 'CountryER',
    55 => 'CountryEE',
    56 => 'CountrySZ',
    57 => 'CountryET',
    58 => 'CountryFJ',
    59 => 'CountryFI',
    60 => 'CountryFR',
    61 => 'CountryGA',
    62 => 'CountryGM',
    63 => 'CountryGE',
    64 => 'CountryDE',
    65 => 'CountryGH',
    66 => 'CountryGR',
    67 => 'CountryGD',
    68 => 'CountryGT',
    69 => 'CountryGN',
    70 => 'CountryGW',
    71 => 'CountryGY',
    72 => 'CountryHT',
    73 => 'CountryHN',
    74 => 'CountryHU',
    75 => 'CountryIS',
    76 => 'CountryIN',
    77 => 'CountryID',
    78 => 'CountryIR',
    79 => 'CountryIQ',
    80 => 'CountryIE',
    81 => 'CountryIL',
    82 => 'CountryIT',
    83 => 'CountryJM',
    84 => 'CountryJP',
    85 => 'CountryJO',
    86 => 'CountryKZ',
    87 => 'CountryKE',
    88 => 'CountryKI',
    89 => 'CountryKP',
    90 => 'CountryKR',
    91 => 'CountryKW',
    92 => 'CountryKG',
    93 => 'CountryLA',
    94 => 'CountryLV',
    95 => 'CountryLB',
    96 => 'CountryLS',
    97 => 'CountryLR',
    98 => 'CountryLY',
    99 => 'CountryLI',
    100 => 'CountryLT',
    101 => 'CountryLU',
    102 => 'CountryMG',
    103 => 'CountryMW',
    104 => 'CountryMY',
    105 => 'CountryMV',
    106 => 'CountryML',
    107 => 'CountryMT',
    108 => 'CountryMH',
    109 => 'CountryMR',
    110 => 'CountryMU',
    111 => 'CountryMX',
    112 => 'CountryFM',
    113 => 'CountryMD',
    114 => 'CountryMC',
    115 => 'CountryMN',
    116 => 'CountryME',
    117 => 'CountryMA',
    118 => 'CountryMZ',
    119 => 'CountryMM',
    120 => 'CountryNA',
    121 => 'CountryNR',
    122 => 'CountryNP',
    123 => 'CountryNL',
    124 => 'CountryNZ',
    125 => 'CountryNI',
    126 => 'CountryNE',
    127 => 'CountryNG',
    128 => 'CountryMK',
    129 => 'CountryNO',
    130 => 'CountryOM',
    131 => 'CountryPK',
    132 => 'CountryPW',
    133 => 'CountryPA',
    134 => 'CountryPG',
    135 => 'CountryPY',
    136 => 'CountryPE',
    137 => 'CountryPH',
    138 => 'CountryPL',
    139 => 'CountryPT',
    140 => 'CountryQA',
    141 => 'CountryRO',
    142 => 'CountryRU',
    143 => 'CountryRW',
    144 => 'CountryKN',
    145 => 'CountryLC',
    146 => 'CountryVC',
    147 => 'CountryWS',
    148 => 'CountrySM',
    149 => 'CountryST',
    150 => 'CountrySA',
    151 => 'CountrySN',
    152 => 'CountryRS',
    153 => 'CountrySC',
    154 => 'CountrySL',
    155 => 'CountrySG',
    156 => 'CountrySK',
    157 => 'CountrySI',
    158 => 'CountrySB',
    159 => 'CountrySO',
    160 => 'CountryZA',
    161 => 'CountrySS',
    162 => 'CountryES',
    163 => 'CountryLK',
    164 => 'CountrySD',
    165 => 'CountrySR',
    166 => 'CountrySE',
    167 => 'CountryCH',
    168 => 'CountrySY',
    169 => 'CountryTJ',
    170 => 'CountryTZ',
    171 => 'CountryTH',
    172 => 'CountryTL',
    173 => 'CountryTG',
    174 => 'CountryTO',
    175 => 'CountryTT',
    176 => 'CountryTN',
    177 => 'CountryTR',
    178 => 'CountryTM',
    179 => 'CountryTV',
    180 => 'CountryUG',
    181 => 'CountryUA',
    182 => 'CountryAE',
    183 => 'CountryGB',
    184 => 'CountryUS',
    185 => 'CountryUY',
    186 => 'CountryUZ',
    187 => 'CountryVU',
    188 => 'CountryVE',
    189 => 'CountryVN',
    190 => 'CountryYE',
    191 => 'CountryZM',
    192 => 'CountryZW',
);

$newValue = $params["data"]["value"];
$newCountry = "Country" . strtoupper($params["data"]["country"]);
$countryIsValid = false;

foreach ($validCountries as $vc) {
    if ($newCountry == $vc) {
        $countryIsValid = true;
        $newCountry = $vc;
        break;
    }
}

if (!$countryIsValid) {
    http_response_code(400);
    die('[{"type":"error","error":"Invalid Country Code, Must Be A 2-Digit ISO Code"}]');
}

DB::query("UPDATE data_country SET ReportCount = ReportCount + 1 WHERE MetricID = %s", $metric["id"]); // Increment Reports
DB::query("UPDATE data_country SET Total = Total + %d WHERE MetricID = %s", $newValue, $metric["id"]); // Update Total
// Update Country (NOT Vulnerable To SQL Injection Because We Verified Against Trusted Values)
DB::query("UPDATE data_country SET " . $newCountry . " = %s + %d WHERE MetricID = %s", $newCountry, $newValue, $metric["id"]); 

echo('[{"type":"success"}]');

?>